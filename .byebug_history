quit
priemera[4].tap { |d| Date.parse(d) }
priemera[4].map { |d| Date.parse(d) }
priemera[4]
quit
movie.css('.movies-center-table div strong').text.split("\n")quit.map(&:strip)
movie.css('.movies-center-table div strong[1]').text.split("\n").map(&:strip)
movie.css('.movies-center-table div strong[4]').text.split("\n").map(&:strip)
movie.css('.movies-center-table div strong').text.split("\n").map(&:strip)
movie.css('.movies-center-table div strong').text.split("\n")
movie.css('.movies-center-table div strong').text
movie.css('.movies-center-table div strong').inner_html.strip
movie.css('.movies-center-table div strong').inner_html.text
movie.at_css('.movies-center-table div strong').text
movie.css('.movies-center-table div strong').text
movie.css('.movies-center-table div strong').text.split('п')
movie.css('.movies-center-table div').text.split('п')
movie.css('.movies-center-table div').map { |m| m.text.strip }
movie.css('.movies-center-table div').text.split('\n')
movie.css('.movies-center-table div').text
movie.css('.movies-center-table div').map
movie.css('.movies-center-table div').text.strip
movie.css('.movies-center-table div').strip
movie.css('.movies-center-table div').text
movie.at_css('.movies-center-table div').each { |m| m.remove if m.name != 'strong' }
movie.each('.movies-center-table div')
movie.at_css('.movies-center-table div').count
movie.at_css('.movies-center-table strong').text
